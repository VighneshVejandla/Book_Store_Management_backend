package com.cts.controller;

import com.cts.repository.UserRepository;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RestController;

@RestController
@RequestMapping("/api/profile")
public class ProfileController {

//    private final UserRepository userRepository;

    @Autowired
    private UserRepository profileService;

    ProfileController(UserRepository userRepository) {
        this.userRepository = userRepository;
    }

    @PostMapping("/create")
    public ProfileDto createProfile(@RequestBody ProfileDto profileDto) {
        return profileService.createProfile(profileDto);
    }

    @GetMapping("/view/{userId}")
    public ProfileDto getProfile(@PathVariable Long userId) {
        return profileService.getProfileByUserId(userId);
    }

    @PutMapping("/update/{userId}")
    public ProfileDto updateProfile(@PathVariable Long userId, @RequestBody ProfileDto profileDto) {
        return profileService.updateProfile(userId, profileDto);
    }

    @DeleteMapping("/softdelete/{userId}")
    public void softDeleteProfile(@PathVariable Long userId) {
        profileService.softDeleteProfile(userId);
    }

    @PutMapping("/recover/{userId}")
    public void recoverProfile(@PathVariable Long userId) {
        profileService.recoverProfile(userId);
    }

    @DeleteMapping("/harddelete/{userId}")
    public void hardDeleteProfile(@PathVariable Long userId) {
        profileService.hardDeleteProfile(userId);
    }

    @PutMapping("/visibility/{userId}")
    public void changeVisibility(@PathVariable Long userId, @RequestParam String visibility) {
        profileService.changeVisibility(userId, visibility);
    }
}
