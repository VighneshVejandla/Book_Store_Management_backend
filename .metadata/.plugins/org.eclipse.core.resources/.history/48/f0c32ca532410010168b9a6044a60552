package com.cts.entity;

import java.time.LocalDateTime;

import jakarta.persistence.Column;
import jakarta.persistence.Entity;
import jakarta.persistence.GeneratedValue;
import jakarta.persistence.GenerationType;
import jakarta.persistence.Id;
import jakarta.validation.constraints.Email;
import jakarta.validation.constraints.NotBlank;
import jakarta.validation.constraints.Pattern;
import lombok.Data;

@Data
@Entity
public class User {
	
	@Id
	@GeneratedValue(strategy = GenerationType.IDENTITY)
	private Long userId;
	
	@NotBlank
	@Column(unique = true)
	private String name;
	
	@NotBlank
	@Email
	@Column(unique = true)
	private String email;
	
	@Pattern(message =" must have atleast 8 char", 
			regexp = "^(?=.*[a-zA-Z])(?=.*\\d)(?=.*[!@#$%^&*()_+\\-=\\[\\]{};':\"\\\\|,.<>\\/?`~])(?=.*[^\\s]).{8,}$")
	private String password;
	
	private String role;
	private LocalDateTime createdDate;
	private LocalDateTime updatedDate;
	private boolean isDeleted;
	
	
	private Long orderid;
	
	private Long reviewid;
	
//	@OneToMany(mappedBy = "user", cascade=CascadeType.ALL)
//	private List<Order> order;
//	
//	@OneToMany(mappedBy = "user", cascade = CascadeType.ALL)
//	private List<Review> review;
}

